package fractals;
/*
 * 1. Кнопка Сброс (на 5)
 * б) сохранение пропорций при масштабировании
 * 2. Сохранение в Файл: (Через диалог сохранения и открытия файла)
 * 		а) во внутреннем формате программы (на 12)
 * 		б*) Загрузка из файла в формате картинки
 * 		б*) добавить Хмин Хмакс необязательно
 * 3**. Выбор формулы построения (на 13)
 * б) передача функциив класс
 * или 
 * 4**. Построение связного множества Жюлиа для некоторой точки
 * 5. Построение фрактала в несколько потоков. (на 19)
 * необ Использование двойной буферизации. BufferedImage получает график 
 * */

import java.awt.Color;
import java.awt.FileDialog;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JPanel;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.border.EtchedBorder;
import javax.swing.filechooser.FileNameExtensionFilter;

import converter.Converter;

public class MainFrame extends JFrame {
	class JGraphicsPanel extends JPanel{
		/**
		 * 
		 */
		private static final long serialVersionUID = 1L;

		@Override
		public void paint(Graphics g){
		
			super.paint(g);
			
			Mandelbrot frac = new Mandelbrot(g,mainView.getWidth(),mainView.getHeight(),minx1,maxx1,miny1,maxy1,mainView,formula);
			frac.thredMandelbrot();
			
		}
		
	}
	
	private static final long serialVersionUID = 1L;
	
	public MainFrame(){
		super();
		createView();	
		minx1=-2;
		maxx1=1;
		miny1=-1.5;
		maxy1=1.5;
	}
	
	private JGraphicsPanel mainView;
	private JPanel mainView1;
	private JButton exit; 
	private JButton clear; 
private Mandelbrot m;
	int x1,y1,x2,y2,x3,y3,x4,y4;
	private Converter c;
	double minx1,maxx1,miny1,maxy1;
	int i;
	Graphics g;
	
	private JMenuBar mb;
	private	JMenu mFile;
	private JMenu fs;
	private	JMenuItem miOpen;
	private	JMenuItem miSave;
	private	JMenuItem f1;
	private int formula;
	private	JMenuItem f2;
	private	JMenuItem f3;
	private	JMenuItem f4;
	FileDialog fdlg;
	
	protected void createView(){
		setTitle("Фрактал Мандельброта");//задаем заголовок окна
		setSize(800,700);//размер окна
		setBackground(Color.LIGHT_GRAY);
		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
	
		mb = new JMenuBar();
		mFile = new JMenu("Файл");
		    
		miOpen = new JMenuItem("Открыть...");
		mFile.add(miOpen);
		    
		miSave = new JMenuItem("Сохранить как...");
		mFile.add(miSave);
		  
		mb.add(mFile);
		
		fs = new JMenu();
		fs.setText("Выбрать формулу");
		f1 = new JMenuItem("z+c");
		f1.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				formula=1;
				repaint();
			}	
		});
		
		f2 = new JMenuItem("z^2+c");
		f2.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				
				formula=2;
				repaint();
			}
		});
		f3 = new JMenuItem("z^3+c");
		f3.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				
				formula=3;
				repaint();
			}
			
		});
		f4 = new JMenuItem("z^4+c");
		f4.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
			
				formula=4;
				repaint();
			}
			
		});

		fs.add(f1);
		fs.add(f2);
		fs.add(f3);
		fs.add(f4);
		mFile.add(fs);
		
	//	fdlg=new FileDialog(fdlg, "Open file", FileDialog.LOAD);
		miOpen.addActionListener(new ActionListener(){
			@Override
			public void actionPerformed(ActionEvent e) {
				JFileChooser fc = new JFileChooser(); 
				fc.removeChoosableFileFilter(fc.getAcceptAllFileFilter());
				fc.addChoosableFileFilter(new FileNameExtensionFilter("Внутренний frac", "frac"));  
				if ( fc.showOpenDialog(null) == JFileChooser.APPROVE_OPTION ) { 
					try ( BufferedReader in = new BufferedReader(new FileReader(fc.getSelectedFile().getAbsoluteFile()))) { 
						double xmin = Double.parseDouble((in.readLine()).split("\n")[0]); 
						double xmax = Double.parseDouble((in.readLine()).split("\n")[0]); 
						double ymin = Double.parseDouble((in.readLine()).split("\n")[0]); 
						double ymax = Double.parseDouble((in.readLine()).split("\n")[0]); 
					if(xmin >= xmax) throw new IOException("Недопустимые значения по Ox"); 
					if(ymin >= ymax) throw new IOException("Недопустимые значения по Oy"); 
					minx1 = xmin; 
					maxx1 = xmax; 
					miny1 = ymin; 
					maxy1 = ymax; 
				//	bi = null; 
					repaint(); 
					in.close(); 
				} 
				catch ( IOException e1 ) { 
				System.out.println("Всё погибло!"); 
				} 
				}	
			}
		});
	//	fdlg=new FileDialog(this, "Save drawing as...", FileDialog.SAVE);
		miSave.addActionListener(new ActionListener(){

			@Override
			public void actionPerformed(ActionEvent e) {
				JFileChooser fc = new JFileChooser();fc.removeChoosableFileFilter(fc.getAcceptAllFileFilter());
		        fc.addChoosableFileFilter(new FileNameExtensionFilter("Внутернний frac", "frac"));
		        
		        if ( fc.showSaveDialog(null) == JFileChooser.APPROVE_OPTION ) {
		            try{
						FileWriter fr = new FileWriter(new File(fc.getSelectedFile().getAbsolutePath() + "." + fc.getFileFilter().getDescription().split(" ")[1]));
						fr.write(minx1 + "\r\n" + maxx1 + "\r\n" + miny1 + "\r\n" + maxy1);
						fr.close();
		            }
		            catch ( IOException e1 ) {
		                System.out.println("Всё погибло!");
		            }
		        }
				try {
					FileWriter fr = new FileWriter(new File("file.txt"));
					fr.write(minx1 + "\r\n" + maxx1 + "\r\n" + miny1 + "\r\n" + maxy1	);
					fr.close();
				} catch (IOException e1) {
					e1.printStackTrace();
				}
			}
			}
			
		);
		setJMenuBar(mb);		
		
		mainView=new JGraphicsPanel();
		mainView.setBackground(Color.WHITE);
		mainView.setBounds(5,5,800,500);
		mainView.setBorder(new EtchedBorder(1));
		mainView1=new JPanel();
		mainView1.setBackground(Color.LIGHT_GRAY);
		mainView1.setBounds(5,510,774,53);
	
		exit = new JButton();
		exit.setBackground(Color.GRAY);
		exit.setBounds(600, 30, 650, 50);
		exit.setText("Выход");
		
		exit.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){
				exit (evt);
			}
			private void exit (ActionEvent evt){
				setVisible(false);		
			}
		});
		
		clear = new JButton();
		clear.setBackground(Color.GRAY);
		clear.setBounds(600, 10, 650, 20);
		clear.setText("Сбросить");
		
		clear.addActionListener(new ActionListener(){
			public void actionPerformed(ActionEvent evt){		
					minx1=-2;
					maxx1=1;
					miny1=-1.5;
					maxy1=1.5;
					repaint();
				
				}
			
		});
	
		GroupLayout gl = new GroupLayout(getContentPane());
		gl.setVerticalGroup(gl.createSequentialGroup()
				.addComponent(mainView)
 				.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE)
				.addComponent(mainView1, 70, 70, 70)
				);
		gl.setHorizontalGroup(gl.createParallelGroup(GroupLayout.Alignment.LEADING)
				.addComponent(mainView, 300, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				.addComponent(mainView1, 300, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
				);
		
		this.setLayout(gl);
		GroupLayout gl1 = new GroupLayout(mainView1);
		
		gl1.setVerticalGroup(gl1.createSequentialGroup()
				.addGap(5)
				.addGroup(gl1.createParallelGroup(GroupLayout.Alignment.BASELINE)
						.addComponent(clear,24,24,24))
				.addPreferredGap(ComponentPlacement.RELATED,GroupLayout.DEFAULT_SIZE,GroupLayout.DEFAULT_SIZE)
				.addGroup(gl1.createParallelGroup(GroupLayout.Alignment.BASELINE)
						.addComponent(exit,24,24,24))
				);
		gl1.setHorizontalGroup(gl1.createSequentialGroup()
				.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE,Short.MAX_VALUE)			
				.addGroup(gl1.createParallelGroup(GroupLayout.Alignment.LEADING)
					.addComponent(clear, 90, 90, 90)
					.addComponent(exit, 90, 90, 90))
				.addGap(5)
							
				);
		mainView1.setLayout(gl1);
	mainView.addMouseListener(new MouseAdapter(){
	    	public void mouseClicked(MouseEvent e){
	    		
	    	}
	    });
	
	 mainView.addMouseListener(new MouseAdapter(){
		 public void mousePressed(MouseEvent e){
			 x1 = e.getX();
			 y1 = e.getY();
			 m.Julia(x1, y1);
		 }
		 
		 public void mouseReleased(MouseEvent e){

			 x2 = e.getX();
			 y2 = e.getY();
			 if(Math.abs(x1 - x2) >= 10 && Math.abs(y1 - y2) >= 10){
			 c=new converter.Converter(mainView.getWidth(),mainView.getHeight(),minx1,maxx1,miny1,maxy1);
			 
			 if (x2<x1){
				 int t=x1;
				 x1=x2;
				 x2=t;
			 }
			 if(y2<y1){
				 int t1=y2;
				 y2=y1;
				 y2=t1;
			 }

			 double minx= c.xScr2Dec(x1);
			 double maxx= c.xScr2Dec(x2);
			 double miny= c.yScr2Dec(y2);
			 double maxy= c.yScr2Dec(y1);
			 if (maxx-minx<maxy-miny){
				 maxx=maxy-miny+minx;
			 }
			 if(maxx-minx>maxy-miny){
				 maxy=maxx-minx+miny;
			 }
			 minx1=minx;
			 maxx1=maxx;
			 miny1=miny;
			 maxy1=maxy;
			 // m=new Mandelbrot(g,mainView.getWidth(),mainView.getHeight(),-2,1,-1.5,1.5, i+1);
			 repaint();
			 }
		 }	 
	 	});

	
	 mainView.addMouseMotionListener(new MouseAdapter(){
		 public void mousePressed(MouseEvent e){
			 x1=x4 = e.getX();
			 y1=y4 = e.getY();
		 }
		 
		 public void mouseDragged(MouseEvent evt){
			 
			 x3 = evt.getX(); 
			 y3 = evt.getY();
			 if(Math.abs(x1 - x3) >= 10 && Math.abs(y1 - y3) >= 10){
				 Graphics g = mainView.getGraphics();
				 int minx11=Math.min(x1,x3);
				 int miny11=Math.min(y1,y3);
				 int maxx11=Math.max(x1,x3);
				 int maxy11=Math.max(y1,y3);
				 
				 m = new Mandelbrot(g,mainView.getWidth(),mainView.getHeight(),minx1,maxx1,miny1,maxy1,mainView, formula);
				 m.prectt( x1,y1,x4, y4 );
				 x4=x3;
				 y4=y3;
				// m.prectt(minx11, miny11, maxx11, maxy11);
				 g.setColor(Color.WHITE);
		//	m=null;
				 g.drawRect(minx11,miny11,maxx11-minx11,maxy11-miny11);			
			 }
			 
		 }});

	
	}

	
	public static void main(String[] args) {
		MainFrame form=new MainFrame();	
		form.setVisible(true);
	}
}
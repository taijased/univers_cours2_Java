package Polinom;

	public class Polinom {
		private double[] coef;  // коэффициенты
	    private int pow;     // степень полинома
	    
	   // Polinom a= new Polinom(pow+1, pow);
	    // a * x^b;
	    public Polinom(double koefs, double d) {
	        coef = new double[(int) (d+1)];
	        coef[(int) d]=koefs;
	        pow = pow1();
	    }

	    // Возвращает степень этого многочлена
	    public int pow1() {
	        int d = 0;
	        for (int i = 0; i < coef.length; i++)
	            if (coef[i] != 0) d = i;
	        return d;
	    }
	   
	    public Polinom sum(Polinom b) {
	        Polinom a = this;
	        Polinom c = new Polinom(0, Math.max(a.pow, b.pow));
	        for (int i = 0; i <= a.pow; i++) c.coef[i] += a.coef[i];
	        for (int i = 0; i <= b.pow; i++) c.coef[i] += b.coef[i];
	        c.pow = c.pow1();
	        return c;
	    }
	 
	    public Polinom razn(Polinom b) {
	        Polinom a = this;
	        Polinom c = new Polinom(0,Math.max(a.pow, b.pow));
	        for (int i = 0; i <= a.pow; i++) c.coef[i] += a.coef[i];
	        for (int i = 0; i <= b.pow; i++) c.coef[i] -= b.coef[i];
	        c.pow = c.pow1();
	        return c;
	    }

	    public Polinom umnog(Polinom b) {
	        Polinom a = this;
	        Polinom c = new Polinom(0, a.pow + b.pow);
	        for (int i = 0; i <= a.pow; i++)
	            for (int j = 0; j <= b.pow; j++)
	                c.coef[i+j] += (a.coef[i] * b.coef[j]);
	        c.pow = c.pow1();
	        return c;
	    }
	    
	    public Polinom umnogCh(double x) {
	        Polinom a = this;
	        Polinom b = new Polinom(0, a.pow);
	        for (int i = 0; i <= a.pow; i++)
	        	b.coef[i] += (a.coef[i] * x);
	        b.pow = b.pow1();
	        return b;
	    }
	    
	    public double ZnT(double x) {
	    	Polinom a = this;
	        double zn=a.coef[0];         
	        for (int i = 1; i < a.coef.length; i++){ 
	        	double t = Math.pow(x,i);
				zn=zn+a.coef[i]*t ;
	        }
	        return zn;
	    }
	    
	     public String toString() {
	        if (pow ==  0) return "" + coef[0];
	        if ((pow ==  1)&(coef[1]!=1)) return coef[1] + "x + " + coef[0];
	       
	        String s = coef[pow] + "x^" + pow;
	        for (int i = pow-1; i >= 0; i--) {
	            if      (coef[i] == 0) continue;
	            
	            else if (coef[i]  > 0) s = s + " + " + ( coef[i]);
	        
	             if (coef[i]  < 0) s = s + " - " + (-coef[i]);
	            if      (i == 1) s = s + " x";
	            else if (i >=  1) s = s + "x^" + i; 
	        }
	        
	       
	        
	        return s;
	    }
		}
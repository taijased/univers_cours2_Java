package Polinom;

	public class Polinom {
		private double[] coef;  // коэффициенты
	    private int pow;     // степень полинома
	    Polinom a = this;


	    public Polinom(double koefs, double d) {
	        coef = new double[(int) (d+1)];
	        coef[(int) d]=koefs;
	        pow = pow1();
	    }

	    // Возвращает степень этого многочлена
	    public int pow1() {
	        int d = 0;
	        for (int i = 0; i < coef.length; i++)
	            if (coef[i] != 0) d = i;
	        return d;
	    }
	   
	    public Polinom sum(Polinom b) {
	   //     Polinom a = this;
	        Polinom c = new Polinom(0, Math.max(a.pow, b.pow));
	        for (int i = 0; i <= a.pow; i++) c.coef[i] += a.coef[i];
	        for (int i = 0; i <= b.pow; i++) c.coef[i] += b.coef[i];
	        c.pow = c.pow1();
	        return c;
	    }
	 
	    public Polinom razn(Polinom b) {
//	        Polinom a = this;
	        Polinom c = new Polinom(0,Math.max(a.pow, b.pow));
	        for (int i = 0; i <= a.pow; i++) c.coef[i] += a.coef[i];
	        for (int i = 0; i <= b.pow; i++) c.coef[i] -= b.coef[i];
	        c.pow = c.pow1();
	        return c;
	    }

	    public Polinom umnog(Polinom b) {
	//        Polinom a = this;
	        Polinom c = new Polinom(0, a.pow + b.pow);
	        for (int i = 0; i <= a.pow; i++)
	            for (int j = 0; j <= b.pow; j++)
	                c.coef[i+j] += (a.coef[i] * b.coef[j]);
	        c.pow = c.pow1();
	        return c;
	    }
	    
	    public Polinom umnogCh(double x) {
	  //      Polinom a = this;
	        Polinom b = new Polinom(0, a.pow);
	        for (int i = 0; i <= a.pow; i++)
	        	b.coef[i] += (a.coef[i] * x);
	        b.pow = b.pow1();
	        return b;
	    }
	    
	    public double ZnT(double x) {
	    //	Polinom a = this;
	        double zn=a.coef[0];         
	        for (int i = 1; i < a.coef.length; i++){ 
	        	double t = Math.pow(x,i);
				zn=zn+a.coef[i]*t ;
	        }
	        return zn;
	    }
	    
	    public String toString() {
	    	if (pow == 0) return "" + coef[0];
	    	if (pow == 1) return coef[1] + "x " + coef[0];
	    	String y ="";
	    	if(coef[pow]!=1.0 && coef[pow]!= -1.0){

	    	y= y+(coef[pow]);

	    	}
	    	String s = y + "x^" + pow;
	    	for (int i = pow-1; i >= 0; i--) {
	    	if (coef[i] == 0) continue;
	    	String h = "";
	    	if(coef[i]!=1.0 && coef[i]!= -1.0){
	    	if(coef[i]>0)
	    	
	    	
	    	h= h+(coef[i]);
	    	else{
	    	h = h + (-coef[i]);
	    	}
	    	}
	    	else if (coef[i] > 0 && i!=0) s = s + " + " + ( h);
	    	else if (coef[i] < 0 && i!=0) s = s + " - " + (h);
	    	if (i == 1) s = s + "+x";
	    	else if (i > 1) s = h + "+x^" + i;
	    	else if(i==0 && coef[i]>0) s = s + "+" +(coef[i]);
	    	else if(i==0&& coef[i]<0) s = s + "-" + (-coef[i]);
	    	}
	    	return s;
	    	}
		}